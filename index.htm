<!doctype html>
<html>
<head>
<title> Demo - Bar Chart with D3.js</title>
<meta charset="UTF-8">
<!-- Inline styles -->
<style>
.legend {                                                
        font-size: 12px;                                        
}                                                        
rect {                                                 
        stroke-width: 2;                                       
}
.rect:hover {                                                 
        color:blue;                                       
}
.barChart
{
 width: 1000px;
 height: 500px;
 border: solid 1px gray;
 padding: 20px;
}
</style>
</head>
<body>	
<!-- Svg Container-->
<svg class="barChart"></svg> 
<!-- Required external scripts-->
<script src="http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
<!-- Custom script methods-->
<script type='text/javascript'>

// This method will generate a bar chart with legend and tool tips, using d3.js.
function DrawChart(yAxisType) { 
// Array which provides data for drawing the graph
   var barData = [{
    'day': '2015 May 12',
    'score': 5,
    'event': 5
  }, {
    'day': '2015 May 11',
    'score': 20,
    'event': 20
  }, {
    'day': '2015 May 10',
    'score': 10,
    'event': 55
  }, {
    'day': '2015 May 09',
    'score': 40,
    'event': 15
  }, {
    'day': '2015 May 08',
    'score': 5,
    'event': 15
  }, {
    'day': '2015 May 07',
    'score': 5,
    'event': 30
  }, {
    'day': '2015 May 06',
    'score': 20,
    'event': 15
  }, {
    'day': '2015 May 05',
    'score': 10,
    'event': 15
  }, {
    'day': '2015 May 04',
    'score': 40,
    'event': 15
  }, {
    'day': '2015 May 03',
    'score': 5,
    'event': 36
  }, {
    'day': '2015 May 02',
    'score': 5,
    'event': 15
  }, {
    'day': '2015 May 01',
    'score': 5,
    'event': 15
  }, {
    'day': '2015 Apr 30',
    'score': 5,
    'event': 15
  }, {
    'day': '2015 Apr 29',
    'score': 5,
    'event': 15
  }, {
    'day': '2015 Apr 28',
    'score': 5,
    'event': 11
  }];

// Method for generating tooltip object
var tip = d3.tip()
  .attr('class', 'd3-tip')
  .offset([0, 0])
  .html(function(d) {
    return "<strong>Data:</strong> <span style='color:red'>"+d.day+" </span>";
  })

//Date format
var parseDate = d3.time.format("%Y %b %d");

//Calling tooltip function
d3.select('.barChart').call(tip);

//Getting svg object
  var vis = d3.select('.barChart'),
    WIDTH = 1000,
    HEIGHT = 500,
    MARGINS = {
      top: 20,
      right: 20,
      bottom: 20,
      left: 50
    },

//Generating X range values
xRange = d3.scale.ordinal()
	.rangeBands([MARGINS.left, WIDTH - MARGINS.right],0.05)
	.domain(barData.map(function(d) {return parseDate.parse(d.day);})),

monthFormat= d3.time.format("%b"), dayFormat= d3.time.format("%d"),
preValue;

//Generate X axis
xAxis = d3.svg.axis()
      .scale(xRange).tickSize(2).orient('top').tickFormat('');



//Appending X axis to SVG container
XAxisLabels =vis.append('svg:g')
    .attr('class', 'x axis')
    .attr('transform', 'translate(0,20)')
    .call(xAxis).selectAll('text');

XAxisLabels.append("tspan").text(function(d,i){var format = "";
			if (i===0)
			{
				format= monthFormat(d);
			}	
			else if(d.getMonth()!=preValue)
				format= monthFormat(d);
			preValue = d.getMonth();
			return format;
			});
XAxisLabels.append("tspan").text(function(d,i){			
				return dayFormat(d);		
			});

//Create y axis line 
yRange = d3.scale.linear()
	    .range([HEIGHT - MARGINS.top, MARGINS.bottom])
            .domain([0,d3.max(barData, function (d) { return selectYaxis(yAxisType,d); }) ])

//Generate Y axis
yAxis = d3.svg.axis()
      .scale(yRange)
      .orient("left").tickSize(2);

//Appending y axis to SVG container
  vis.append('svg:g')
    .attr('class', 'y axis')
    .attr('transform', 'translate(' + (MARGINS.left) + ',0)')
    .call(yAxis);

//Legend color
  var color = d3.scale.category20b();

//Adding bars to the chart
  vis.selectAll('rect')
    .data(barData)
    .enter()
    .append('rect')
    .attr('class','rect')
    .attr('x', function (d) {
      return xRange(parseDate.parse(d.day));
    })
    .attr('y', function (d) {
      return yRange(selectYaxis(yAxisType,d));
    })
    .attr('width',  xRange.rangeBand())
    .attr('height', function (d) {
      return ((HEIGHT - MARGINS.bottom) - yRange(selectYaxis(yAxisType,d)));
    })
    .attr('fill', 'grey')
    .on('mouseover',tip.show)
    .on('mouseout',tip.hide);

// Adding legend to the graph
 var legend = vis.selectAll(".legend")
      .data(barData)
    .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) { return "translate(-70," + i * 20 + ")"; });

  legend.append("rect")
      .attr("x", 60)
      .attr("width", 18)
      .attr("height", 18)
      .style("fill", color);

var legendFormat = d3.time.format("%d");
  legend.append("text")
      .attr("x", 95)
      .attr("y", 9)
      .attr("dy", ".35em")
      .style("text-anchor", "end")
      .text(function(d) { return legendFormat(new Date(d.day)); });
}

//Draw bar chart
DrawChart("event");
//Function to select Y axis value type
function selectYaxis(type,object)
{
if(type=="score")
return object.score;
else if(type=="event")
return object.event;
}

</script>
</body>
</html>

